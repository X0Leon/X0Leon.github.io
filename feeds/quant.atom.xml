<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Leon's blog</title><link href="http://www.domuse.com/" rel="alternate"></link><link href="http://www.domuse.com/feeds/quant.atom.xml" rel="self"></link><id>http://www.domuse.com/</id><updated>2016-12-21T00:00:00+08:00</updated><entry><title>除权和复权</title><link href="http://www.domuse.com/stock-exclude-right.html" rel="alternate"></link><published>2016-12-21T00:00:00+08:00</published><updated>2016-12-21T00:00:00+08:00</updated><author><name>Leon</name></author><id>tag:www.domuse.com,2016-12-21:stock-exclude-right.html</id><summary type="html">&lt;p&gt;&amp;emsp;&amp;emsp;——即使脑回路短接，也不能发热出错呢：我们都爱数学游戏&lt;/p&gt;


&lt;p&gt;送股、转股、配股（增发）、分红、派息……总有一款让新韭菜头晕，其实这些都是数字游戏，只是通过分现金或变动股数来调整股价，总市值保持不变。那公司为什么要这么做呢？考虑增股或分红需要缴税，小股东还要亏损一点，但大股东总有某种原因，例如市值管理，市场有炒作低价股的倾向！除权（Exclude Right, XR)是发行公司按一定比例分配&lt;strong&gt;股票&lt;/strong&gt;股利给股东，增加公司总股数；除息（Exclude Dividen, XD）是分配&lt;strong&gt;现金&lt;/strong&gt;股利给股东，两者都会降低每股权益，且有时候统称为权息，或者就是除权。&lt;/p&gt;


&lt;p&gt;举例：某公司决定10股送1股，即送股率0.1，如果你手中有10股，送完后则有11股。假设该公司总共有20股，除权前每股5元，那价格如何调整呢？设除权后价格为X，根据市值不变原则，可得：5*20 = X*20*(1+0.1)，即X=5/(1+0.1)。第二天就在这个价格基础上进行集合竞价。&lt;/p&gt;
&lt;p&gt;由市值不变原则，除权除息的&lt;a href="http://www.szse.cn/main/aboutus/xywjs/xjygzjd/200605168655.shtml"&gt;计算公式&lt;/a&gt;也很简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;除权参考价 = (股权登记日收盘价 + 配(新)股价 * 流通股变动比率 - 现金红利) / (1 + 流通股变动比率)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注：分红转增的股份变动比例直接用送股比例、配股比例和派息比例即可，而配股时因为有股东会放弃配股， 所以直接用配股比例算不准确，需要按照配股前后股本的变动比例来计算。&lt;/p&gt;
&lt;p&gt;除权除息会造成股票价格、技术指标突变，但却是真实价格。复权是我们为了研究方便模拟出来的逆过程，用于分析当前价位在历史价格中的相对位置。前复权是以当前价格为基准，缩减历史价格，将去除权息前的K线向下平移拼接而成，比较常用。后复权是以某个历史时点为基准，调整此后的价格，此时当前价格也被动变化，不利于和实盘对照。&lt;/p&gt;
&lt;h2&gt;量化回测中的复权&lt;/h2&gt;
&lt;p&gt;前复权是站在未来看过去，实际上对于基于价格的策略来说，引入了未来函数。一个解决方法是回测中每一天只使用该天之前的前复权数据，这种方法有时候被称为“动态复权价格”；另一个选择是使用后复权价格。当然，如果价格因子也需要考虑，则必须使用真实价格，否则会得到错误的结果，例如，买入低价股策略。&lt;/p&gt;
&lt;p&gt;&lt;img src="../images/exclude_price.png" width = "250" alt="动态复权价格" align=center /&gt;&lt;/p&gt;
&lt;p&gt;前复权的另一个问题是计算的累计误差，由于股价通常采用两位小数，前复权会导致价格基数越来越小，即便采用百分比收益率，累计计算误差越来越大，而后复权则好得多。无论是简单前复权，还是动态前复权，时间跨度可能在3~5年为宜。&lt;/p&gt;
&lt;p&gt;第三个缺点是当股票存在分配或配股时，前复权不能正确计算收益率，有时候我们发现股票在很久之前的价格是负的，例如万科A。更可靠地是下文所述的复权涨跌幅复权。&lt;/p&gt;
&lt;h3&gt;本地化存储&lt;/h3&gt;
&lt;p&gt;各类平台中的交易数据一般有不复权、前复权（当前价格基准）和后复权（上市价格基准）三种选择，更合理的方案是获取不复权数据和复权因子，然后在有需要的时候自行计算复权价格。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;单次复权因子 = 登记日收盘价 / 除权参考价
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;累计复权因子（即每个交易日的复权因子）为此前所有单次复权因子的连乘积。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;向后复权价 = 股票真实价格 * 每个交易日的复权因子
复权涨幅 = 复权价 / 前一日复权价 - 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我们得到复权涨跌幅后，可以很容易通过连乘得到后复权价格（或者直接用累计复权因子），通过连除得到前复权价格。需要注意的是，如果不参与分配，或者分红进行重复投资，且不参与配股，此时得到的收益率也是真实收益率。&lt;/p&gt;
&lt;p&gt;至此，我们统一了计算口径，通过累计复权因子得到后复权价格进而计算涨跌幅，也能在回测时得到较真实的收益率。&lt;/p&gt;
&lt;p&gt;（未完，待续）&lt;/p&gt;</summary><category term="quant"></category><category term="stock"></category></entry><entry><title>数据的获取和存储</title><link href="http://www.domuse.com/quant-data.html" rel="alternate"></link><published>2016-12-18T00:00:00+08:00</published><updated>2016-12-18T00:00:00+08:00</updated><author><name>Leon</name></author><id>tag:www.domuse.com,2016-12-18:quant-data.html</id><summary type="html">

&lt;p&gt;不同于传统的判断式投资，量化投资（回测/交易）是由数据驱动的，形形色色的数据反映金融市场的不同侧面，我们希望获取尽可能多的不相关或弱相关的数据集以建立信息优势。获取诸多种数据是量化投资的第一步，也是至关重要的环节。基于此，我们就可以进行量化回测（&lt;a href="/quant-backtest.html"&gt;量化回测框架XQuant&lt;/a&gt;），模拟交易，直至实盘交易。&lt;/p&gt;
&lt;p&gt;本文介绍我最近的开源项目&lt;a href="https://github.com/X0Leon/qdata"&gt;qdata&lt;/a&gt;，并将此文作为所有量化数据相关的博文索引。&lt;/p&gt;


&lt;h2&gt;数据分类&lt;/h2&gt;
&lt;p&gt;为了研究方便，我将感兴趣的数据大致分为&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交易数据：带时间戳戳的bar，或者分笔成交的数据，或者实时bid/ask数据&lt;/li&gt;
&lt;li&gt;扩展交易数据：交易数据深度信息，如龙虎榜、融资融券、股东持股变动等&lt;/li&gt;
&lt;li&gt;财务数据：公司基本面的数据，如营业额、净利润、现金流、净资产、周转率等&lt;/li&gt;
&lt;li&gt;公司归类：公司间关联信息，如行业板块、概念、各类指数等&lt;/li&gt;
&lt;li&gt;宏观数据：GDP、利率、广义货币、CPI、工业品出厂价格指数等&lt;/li&gt;
&lt;li&gt;新闻研报：滚动新闻、信息地雷及研究员报告等&lt;/li&gt;
&lt;li&gt;舆情数据：雪球、微博、搜索引擎等反映市场心理的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;量化数据非常庞杂，一般通过API接口或者网络爬虫来收集、清洗和存储，涉及urllib/requests，re/bs4，HDF5/SOL，Redis，&lt;a href="http://tushare.org/"&gt;tushare&lt;/a&gt;/pandas等python库及技术，我们在其他适当的地方加以介绍。这里从最基本的交易市场数据开始，逐步扩展。&lt;/p&gt;
&lt;h2&gt;qdata项目&lt;/h2&gt;
&lt;p&gt;Github/&lt;a href="https://github.com/X0Leon/qdata"&gt;qdata&lt;/a&gt; - 目标：High-level的量化数据获取和存储方案。&lt;/p&gt;
&lt;p&gt;&lt;img src="../images/qdata_schematic.png" width = "500" alt="qdata架构" align=center /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 0.1: 初始化股票日线数据到HDF5文件系统，盘后自动更新行情数据 (2016年12月)&lt;/li&gt;
&lt;li&gt;Version 0.2: 冗余数据源，股票除权数据的获取，及复权因子的计算 (In Progress)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# run.py&lt;/span&gt;
&lt;span class="n"&gt;init_data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# 初始化存储系统，获取股票上市至今的所有数据&lt;/span&gt;
&lt;span class="n"&gt;sync_data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# 更新数据，可以每天运行&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;若干重要问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为什么优先HDF5存储，而非SOL系？&lt;/li&gt;
&lt;li&gt;回测时，如何处理复权？更新存储时如何处理复权？复权因子如何计算？&lt;/li&gt;
&lt;/ol&gt;</summary><category term="quant"></category><category term="data"></category><category term="storage"></category></entry><entry><title>量化回测框架</title><link href="http://www.domuse.com/quant-backtest.html" rel="alternate"></link><published>2016-12-19T00:00:00+08:00</published><updated>2016-12-19T00:00:00+08:00</updated><author><name>Leon</name></author><id>tag:www.domuse.com,2016-11-10:quant-backtest.html</id><summary type="html">

&lt;p&gt;让我们来设计一个真实的量化回测框架（开源框架-&lt;a href="https://github.com/X0Leon/XQuant"&gt;XQuant&lt;/a&gt;），由需求驱动，从简单到复杂，采用python开发。&lt;/p&gt;
&lt;p&gt;回测框架大致分为两种：for-loop(轮询)和event-driven(事件驱动)，前者进行向量化计算，速度更快，但不符合实盘交易的流程，后者采用逐个bar/tick读取数据，并产生交易信号的方式，利于统一回测和实盘的代码，部分解决“回测易、实盘难”的困境。虽然某些商业平台提供这样的回测框架，但速度往往很慢，底层架构也不透明，所以我自己在构建一整套回测体系。&lt;/p&gt;


&lt;h2&gt;主要特性&lt;/h2&gt;
&lt;p&gt;Version 0.2: 完整的事件驱动引擎engine和调度器，亚毫米级速度 (2016年9月)&lt;/p&gt;
&lt;p&gt;Version 0.3: 清晰的架构，持续完善finance/utils/visual模块 (2016年10月)&lt;/p&gt;
&lt;p&gt;Version 0.4: 支持股票和期货的滑点、手续费模型；logging功能 (2016年11月)&lt;/p&gt;
&lt;p&gt;Version 0.5：回测结束强制平仓；可选回测区间；分品种交易记录 (2016年12月)&lt;/p&gt;
&lt;p&gt;TODO:&lt;/p&gt;
&lt;p&gt;Version 0.*: 模拟交易功能&lt;/p&gt;
&lt;p&gt;Version 0.*: Web GUI可视化&lt;/p&gt;
&lt;p&gt;Version 1.0: 支持实盘交易&lt;/p&gt;
&lt;h2&gt;策略示例&lt;/h2&gt;
&lt;p&gt;简单的移动双均线策略（Moving Average Cross Strategy）例子如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MovingAverageCrossStrategy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Strategy&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;移动双均线策略&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bars&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;long_window&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;short_window&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    初始化移动平均线策略&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bars&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;symbol_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;symbol_list&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;events&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;long_window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;long_window&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;short_window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;short_window&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bought&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;symbol_list&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;calculate_signals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    当短期均线（如5日线）上穿长期均线（如10日线），买入；反之，卖出&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BAR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;symbol_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;bars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_latest_bars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;long_window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;bars&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;bars&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;long_window&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;symbol&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;open&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;low&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bars&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MA_long&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rolling&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;long_window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MA_short&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rolling&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;short_window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MA_long&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MA_short&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; \
                                &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MA_long&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MA_short&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bought&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                        &lt;span class="n"&gt;signal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SignalEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;bars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;LONG&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bought&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MA_long&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MA_short&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; \
                                &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MA_long&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MA_short&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bought&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                        &lt;span class="n"&gt;signal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SignalEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;bars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EXIT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bought&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;完整的例子参考github·XQuant/demo中&lt;a href="https://github.com/X0Leon/XQuant/blob/master/demo/ma_cross_strategy.py"&gt;ma_cross_strategy.py&lt;/a&gt;文件。&lt;/p&gt;
&lt;h2&gt;可视化功能&lt;/h2&gt;
&lt;p&gt;XQuant自带简单而强大的可视化模块（基于matplotlib），例，某CTA策略回测结果的可视化：&lt;/p&gt;
&lt;p&gt;&lt;img src="../images/chart_demo.png" width = "800" alt="XQuant可视化" align=center /&gt;&lt;/p&gt;
&lt;p&gt;更加强悍而弹性的量化投资可视化库也在筹备和初期开发中，其将与XQuant无缝结合，期待ing~ :)&lt;/p&gt;
&lt;p&gt;免责声明：仅供个人研究使用，不构成投资建议。如果感兴趣，欢迎联系我！&lt;/p&gt;</summary><category term="quant"></category><category term="backtest"></category></entry></feed>